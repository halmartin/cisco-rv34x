#!/bin/sh
# 2017-02-06: harry.lin <harry.lin@deltaww.com>
# Script for testing usb.

flushCache()
{
	sync
	echo 3 > /proc/sys/vm/drop_caches
}

prepareHandle()
{
	if mount | grep /usbmedia > /dev/null; then
		umount /usbmedia 2>/dev/null
	fi
}

releaseHandle()
{
	[ -f /usbmedia/random.file ] && rm -f /usbmedia/random.file
	flushCache
	umount /usbmedia 2>/dev/null
}


cleanHandle()
{
	[ -f random.file ] && rm -f random.file
	[ -f /usbmedia/random.file ] && rm -f /usbmedia/random.file
	flushCache
	umount /usbmedia >/dev/null 2>&1
	rm -rf /usbmedia
	exit 1
}

isUSB()
{
	rv=`readlink /sys/block/$1/device|grep "usb"`
	if [ "$rv" == "" ];then
		return 0;
	else
		return 1;
	fi
}

repeat=${1:-1}
count=1
`cat /proc/partitions | grep sd | awk '{print $4}' > /tmp/usb_arrary`
usb=0

while read line; do
	isUSB `echo $line | cut -b 1-3`
	if [ "$?" == "1" ]; then
		usb=1
		break
	fi
done </tmp/usb_arrary

if [ "$usb" == "0" ]; then
	echo "Valid USB device not found!"
	exit 1
fi

prepareHandle

#echo "mkdir /usbmedia"
`mkdir -p /usbmedia`
if [ "$?" != "0" ]; then echo "mkdir /usbmedia failed"; exit 1; fi

#echo "generating random file for testing"
`dd if=/dev/urandom of=random.file bs=1M count=2 >/dev/null 2>&1`
if [ "$?" != "0" ]; then echo "generate random file failed"; exit 1; fi

while true
do
	while read line; do
		isUSB `echo $line | cut -b 1-3`
		if [ "$?" == "1" ]; then
			echo "mount $line "
			flushCache
			`mount -t vfat /dev/"$line" /usbmedia 2>/dev/null`
			if [ "$?" != "0" ]; then
				if [ "$line" == "`cat /tmp/usb_arrary | sed -n '$p'`" ]; then
					echo "mount $line failed"
				fi
				continue
			fi
			
			echo "copy file to /usbmedia "
			`cp -f random.file /usbmedia`
			if [ "$?" != "0" ]; then echo "copy file to /usbmedia failed"; cleanHandle; fi
			
			echo "umount /usbmedia "
			flushCache
			`umount /usbmedia 2>/dev/null`
			if [ "$?" != "0" ]; then echo "umount /usbmedia failed"; cleanHandle; fi
			
			echo "remount $line "
			`mount -t vfat /dev/"$line" /usbmedia 2>/dev/null`
			if [ "$?" != "0" ]; then echo "remount failed"; cleanHandle; fi
			
			echo "compare file between $line and usbmedia "
			flushCache
			`cmp random.file /usbmedia/random.file`
			if [ "$?" == "0" ];then
				echo "USB:$line test passed $count"
				releaseHandle
			else
				echo "USB:$line test failed $count"
				releaseHandle
			fi
		fi
	done </tmp/usb_arrary

	if [ "$count" -eq "$repeat" ]; then break; fi

	count=$((count+1))

done

cleanHandle

