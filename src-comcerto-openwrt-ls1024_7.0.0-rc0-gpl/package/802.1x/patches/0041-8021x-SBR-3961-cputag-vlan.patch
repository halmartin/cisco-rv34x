From 8ddf73e7ae9f6194235f85f2333d428ebbede25d Mon Sep 17 00:00:00 2001
From: nageshkoneti <b47094@freescale.com>
Date: Fri, 29 Jun 2018 10:40:47 +0530
Subject: [PATCH 2/2] SBR-3961 Added Changes to the cpu tag so that switch
 won't add vlan header if it receives 802.1x untag
 packet from the host. Signed-off-by: nageshkoneti
 <b47094@freescale.com>

---
 ieee802_1x.c |   45 +++++++++++++++++++++++++++++++++++++++++++--
 1 file changed, 43 insertions(+), 2 deletions(-)

diff --git a/src/source/ieee802_1x.c b/src/source/ieee802_1x.c
index a812339..c3852cf 100644
--- a/src/source/ieee802_1x.c
+++ b/src/source/ieee802_1x.c
@@ -295,6 +295,24 @@ static void ieee802_1x_rv340_insertCPUTag(u8 *pkt, u8 port_id)
 	return;
 }
 
+static void ieee802_1x_rv340_insertCPUTag_untag_enforce(u8 *pkt, u8 port_id)
+{
+        u16 cpuTagId = 0x8899;
+
+        pkt[0] = ((cpuTagId >> 8) & 0xFF);
+        pkt[1] = (cpuTagId & 0xFF);
+        pkt[2] = 0x04; /* Protocol */
+        pkt[3] = 0x00; /* BP_FLTR2 */
+        pkt[4] = 0x00; /* AS_DPM */
+        pkt[5] = 0x80;
+        pkt[6] = 0x00;
+        pkt[7] = 0x00;
+
+        pkt[7] = 0x1 << port_id;
+
+        return;
+}
+
 static void ieee802_1x_insertCPUTag(u8 *pkt, u8 port_id)
 {
 	u16 cpuTagId = 0x8899;
@@ -316,6 +334,27 @@ static void ieee802_1x_insertCPUTag(u8 *pkt, u8 port_id)
 	return;
 }
 
+static void ieee802_1x_insertCPUTag_untag_enforce(u8 *pkt, u8 port_id)
+{
+        u16 cpuTagId = 0x8899;
+
+        pkt[0] = ((cpuTagId >> 8) & 0xFF);
+        pkt[1] = (cpuTagId & 0xFF);
+        pkt[2] = 0x04; /* Protocol */
+        pkt[3] = 0x10; /* BP_FLTR2 */
+        pkt[4] = 0x02; /* AS_DPM */
+        pkt[5] = 0x00;
+        pkt[6] = 0x00;
+        pkt[7] = 0x00;
+        pkt[8] = 0x00;
+        pkt[9] = 0x00;
+        if(port_id > 7)
+            pkt[10] = 0x1 << (port_id - 8);
+        else
+            pkt[11] = 0x1 << port_id;
+        
+        return;
+}
 static void ieee802_1x_insertBCM_CPUTag(u8 *pkt, u8 port_id)
 {
         pkt[0] = 0x20;
@@ -463,12 +502,12 @@ static void ieee802_1x_send_with_cputag(rtapd *rtapd, struct sta_info *sta, u8 t
 	memcpy(hdr3->dAddr, sta->addr, ETH_ALEN);
 	memcpy(hdr3->sAddr, rtapd->own_addr[0], ETH_ALEN);
 
-	ieee802_1x_insertCPUTag(hdr3->tx_cpu_tag, sta->aid);
 
 //	memcpy(hdr3->sAddr, rtapd->own_addr[sta->ApIdx], ETH_ALEN);
 	/* Insert VLAN Header */
 	if (sta->vlan_id)
 	{
+        ieee802_1x_insertCPUTag(hdr3->tx_cpu_tag, sta->aid);
 		hdr3->eth_type = htons(ETH_P_VLAN);
 		pos = (u8 *) (hdr3 + 1);
 
@@ -484,6 +523,7 @@ static void ieee802_1x_send_with_cputag(rtapd *rtapd, struct sta_info *sta, u8 t
 	}
 	else
 	{
+        ieee802_1x_insertCPUTag_untag_enforce(hdr3->tx_cpu_tag, sta->aid);
 		if (sta->ethertype == ETH_P_PRE_AUTH)
 			(hdr3->eth_type) = htons(ETH_P_PRE_AUTH);
 		else
@@ -544,10 +584,10 @@ static void ieee802_1x_send(rtapd *rtapd, struct sta_info *sta, u8 type, u8 *dat
 	memcpy(hdr3->sAddr, rtapd->own_addr[0], ETH_ALEN);
 //	memcpy(hdr3->sAddr, rtapd->own_addr[sta->ApIdx], ETH_ALEN);
 
-	ieee802_1x_rv340_insertCPUTag(hdr3->tx_cpu_tag, sta->aid);
 
 	if (sta->vlan_id)
 	{
+        ieee802_1x_rv340_insertCPUTag(hdr3->tx_cpu_tag, sta->aid);
 		hdr3->eth_type = htons(ETH_P_VLAN);
 		pos = (u8 *) (hdr3 + 1);
 	
@@ -563,6 +603,7 @@ static void ieee802_1x_send(rtapd *rtapd, struct sta_info *sta, u8 type, u8 *dat
 	}
 	else
 	{
+        ieee802_1x_rv340_insertCPUTag_untag_enforce(hdr3->tx_cpu_tag, sta->aid);
 		if (sta->ethertype == ETH_P_PRE_AUTH)
 			(hdr3->eth_type) = htons(ETH_P_PRE_AUTH);
 		else
-- 
1.7.9.5

