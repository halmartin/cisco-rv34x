#!/bin/sh

while [ $# -gt 0 ]; do
	case "$1" in
	"ssid" )
		shift 1
		ssid=$1
	;;
	"radio")
		shift 1
		radio=$1
	;;
	* )
		shift 1
	;;
	esac
done

board="$(/usr/bin/board_check.sh)"
if [ "$board" = "RV160W" ];then
	[ "$radio" = "WLAN0" ] && RADIO="wl1"
	[ "$radio" = "WLAN1" ] && RADIO="wl0"
	[ "$radio" = "BOTH" ] && RADIO="both"
elif [ "$board" = "RV340W" ];then
    [ "$radio" = "WLAN1" ] && RADIO="wl0"
    [ "$radio" = "WLAN2" ] && RADIO="wl1"
else
	[ "$radio" = "WLAN0" ] && RADIO="wl0"
	[ "$radio" = "WLAN1" ] && RADIO="wl1"
	[ "$radio" = "BOTH" ] && RADIO="both"
fi

. /lib/functions.sh

target_ssid="$ssid"
interface=""

target_radio=$RADIO

[ -z "$target_ssid" -o -z "$target_radio" ] && {
	return 1
}

scan_wifi() {
	local cfgfile="$1"
	DEVICES=
	wl0_VIFS=
	wl1_VIFS=

	config_cb() {
		local type="$1"
		local section="$2"

		# section start
		case "$type" in
			wifi-device)
				append DEVICES "$section"
				#config_set "$section" vifs ""
				config_set "$section" ht_capab ""
			;;
		esac

		# section end
		config_get TYPE "$CONFIG_SECTION" TYPE
		case "$TYPE" in
			wifi-iface)
				config_get device "$CONFIG_SECTION" device
				eval append ${device}_VIFS "$CONFIG_SECTION"
				eval vifs="\${${device}_VIFS}"
				config_set "$device" vifs "$vifs"
			;;
		esac
	}
	config_load "${cfgfile:-wireless}"
}

include /lib/wifi
scan_wifi

# Get interface name
wps_get_ifname() {
    local i=-1
    while grep -qs "^ *wl$((++i)):" /proc/net/dev; do
        local type
        local device="wl${i}"

		[ -n "$target_radio" -a "$target_radio" != "both" -a "$target_radio" != "$device" ] && continue
		[ -z "$target_radio" ] && {
			config_get disabled "$device" disabled 0
			if [ "$disabled" = "1" ];then
				continue
			fi
		}

        config_get type $device type
        [ "$type" = broadcom ] && {
            local vif vifs ifname find_ssid

            config_get vifs "$device" vifs

            for vif in $vifs; do
                config_get ifname "$vif" ifname
                config_get ssid "$vif" ssid
                config_get key "$vif" key

                [ "$ssid" = "$target_ssid" ] && {
                    interface="$ifname"
                    return
                }
            done
        }
    done
}

wps_get_ifname

[ -z "$interface" ] && return 1

gen_pin="$(nvram get wps_device_pin_g)"

if [ -n "$gen_pin" ];then
	pin_locked="$(nvram get ${interface}_wps_aplockdown_forceon)"
	if [ "$pin_locked" = "1" ];then
		echo "code 2 errstr \"pin locked\""
		return 0
	fi
	wps_cmd="$(which wps_cli)"
	$wps_cmd wps_ap_pin_expire
	ap_pin_expire="$(nvram get wps_ap_pin_expire)"
	# 0: already timeout
	# 1 - 80640: remaining timeout value
	# 80641: never expires
	[ -z "$ap_pin_expire" ] && ap_pin_expire=86401
	echo "code 0 errstr \"Success\" pin $gen_pin pin-timeout $ap_pin_expire"
	return 0
else
	echo "code 1 errstr \"Didn't set ap pin\""
	return 0
fi
