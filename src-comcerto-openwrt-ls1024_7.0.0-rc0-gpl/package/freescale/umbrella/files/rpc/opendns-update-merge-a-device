#!/bin/sh

#This rpc change the exiting device name to new name

##Rest API: PATCH /v1/organizations/{organizationId}/networkdevices/{originId}
##This API used change name of a registered device identified by originId.
##Command:
#curl -X PATCH https://management.api.umbrella.com/v1/organizations/2251171/networkdevices/124575806 --user 'e2ca354f65c24068afac72758669e061:a7eb4ef43e2a48229ce87add8b8e98e0' --header "Content-Type: application/json" --data '{"name":"testDev"}'
#Output:
#{"deviceId":"ab00579d9238fc5a","deviceKey":"4321-01aabbccddff","name":"testDev","serialNumber":"12345b","createdAt":"2018-01-11T07:05:18.000Z","originId":124575806,"organizationId":2251171}

. /usr/share/libubox/jshn.sh

RPC_OUTPUT=/tmp/odns_device_output
RPC_DEBUG=/tmp/odns_debug_output
CURL="/usr/bin/curl"

#logger -t rpc-testing "Called $0 with args: $@"

key=`echo $@ | awk '{for (I=1;I<=NF;I++) if ($I == "key") {print $(I+1)};}'`
secret=`echo $@ | awk '{for (I=1;I<=NF;I++) if ($I == "secret") {print $(I+1)};}'`
ca=`echo $@ | awk '{for (I=1;I<=NF;I++) if ($I == "ca") {print $(I+1)};}'`

org_id=`echo $@ | awk '{for (I=1;I<=NF;I++) if ($I == "organization-id") {print $(I+1)};}'`
origin_id=`echo $@ | awk '{for (I=1;I<=NF;I++) if ($I == "origin-id") {print $(I+1)};}'`
DEV_NAME=`echo $@ | awk '{for (I=1;I<=NF;I++) if ($I == "name") {print $(I+1)};}'`

[ -z "$key" ] && {
	key=$(uci get umbrella.netdev_config_0.key)
}

[ -z "$secret" ] && {
	secret=$(uci get umbrella.netdev_config_0.secret)
}

#Error Codes
ODNS_SUCCESS=0
ODNS_FAILURE=1
errcode=$ODNS_SUCCESS

#clear the old contents of the debug file
echo -n "" > $RPC_DEBUG
echo "$0: key=$key secret=$secret ca=$ca orgid=$org_id originid=$origin_id $DEV_NAME" > $RPC_DEBUG
echo "no. of argument:" $(( $#/2 )) >> $RPC_DEBUG


#validating the input arguments
if [ -z $org_id ];then
     echo "not-ok __BEGIN error-code 1 error-message \"organization-id is missing\" not-ok __END"
     exit 0
#elif [ -z $origin_id ] || [ -z $DEV_NAME ];then
#     echo "not-ok __BEGIN error-code 1 error-message \"origin-id or dev-name is missing\" not-ok __END"
#     exit 0
elif [ -z $key ] || [ -z $secret ];then
     echo "not-ok __BEGIN error-code 1 error-message \"key or secret is missing\" not-ok __END"
     exit 0
fi


#Athentication Credentials
KEY="$key:$secret"
URL="https://management.api.umbrella.com/v1/organizations/$org_id/networkdevices"
CONTENT_TYPE="Content-Type: application/json"

# Data to be passed to rest APIs
PATCH_DATA="{\"name\":\""$DEV_NAME"\"}"
echo $PATCH_DATA >> $RPC_DEBUG

update_merge_a_device ()
{
	isFailure=$(cat $RPC_OUTPUT | grep error)
	isAuthFailure=$(cat $RPC_OUTPUT | grep message)

	if [ -n "$isFailure" ]
	then
		#Failure case
		local __tmp=$(cat $RPC_OUTPUT)

		json_init
		json_load "${__tmp:-{}}"

		#json_get_keys __keys
		#echo "keys: $__keys"

		json_get_var statusCode statusCode
		json_get_var error error
		json_get_var txId txId

		echo "not-ok __BEGIN error-code $statusCode error-message \"$error\" tx-id \"$txId\" not-ok __END"
	elif [ -n "$isAuthFailure" ]
	then
		local __tmp=$(cat $RPC_OUTPUT)
		json_init
		json_load "${__tmp:-{}}"

		json_get_var message message
		echo "not-ok __BEGIN error-code 403 error-message \"$message\" not-ok __END"
	else
		echo "success-code 200"

		local __tmp=$(cat $RPC_OUTPUT)

		json_init
		json_load "${__tmp:-{}}"

		json_get_var deviceId deviceId
		json_get_var deviceKey deviceKey
		json_get_var name name
		json_get_var serialNumber serialNumber
		json_get_var createdAt createdAt
		json_get_var originId originId
		json_get_var organizationId organizationId

		echo "device __BEGIN origin-id $originId device-id \"$deviceId\" device-key \"$deviceKey\" name \"$name\" serial-number \"$serialNumber\" created-at \"$createdAt\" organization-id \"$organizationId\" device __END"
	fi
}

# Change the name of the registered deviced identified by $origin_id.
$CURL $URL/$origin_id -X PATCH --user $KEY --header "Content-Type: application/json" --data $PATCH_DATA -k 2>/dev/null > $RPC_OUTPUT
[ "$?" != "0" ] && {
  echo "not-ok __BEGIN error-code 1 error-message \"Network Error\" not-ok __END"
  exit 0
}

#calling custom function
update_merge_a_device

exit 0

