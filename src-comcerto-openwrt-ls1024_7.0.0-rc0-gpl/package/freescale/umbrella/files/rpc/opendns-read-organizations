#! /bin/sh

#This rpc gets list of organizations for the given credentials.

. /usr/share/libubox/jshn.sh

#logger -t rpc-testing "Called $0 with args: $@ "

#redirect the CURL command output to the below file
RPC_OUTPUT=/tmp/odns_output
RPC_DEBUG=/tmp/odns_debug_output
CURL="/usr/bin/curl"

key=`echo $@ | awk '{for (I=1;I<=NF;I++) if ($I == "key") {print $(I+1)};}'`
secret=`echo $@ | awk '{for (I=1;I<=NF;I++) if ($I == "secret") {print $(I+1)};}'`
ca=`echo $@ | awk '{for (I=1;I<=NF;I++) if ($I == "ca") {print $(I+1)};}'`


#error codes
ODNS_SUCCESS=0
ODNS_FAILURE=1
errcode=$ODNS_SUCCESS

#Authentication Credentials
KEY="$key:$secret"
URL="https://management.api.umbrella.com/v1/organizations"
CA_CERT_PATH=/etc/ssl/private
export CURL_CA_BUNDLE=/etc/ssl/private

#clear the old contents of the debug file
echo -n "" > $RPC_DEBUG
echo -n "" > $RPC_OUTPUT
echo "$0: key=$key secret=$secret ca=$ca" > $RPC_DEBUG
echo "no. of arguments:" $# >> $RPC_DEBUG

#Validating the input arguments
if [ -z $key ] || [ -z $secret ];then
    echo "not-ok __BEGIN error-code 1 error-message \"key or secret is missing\" not-ok __END"
    exit 0
fi


get_organizations ()
{
#	local __tmp=$(curl -k -X GET https://management.api.umbrella.com/v1/organizations --user 'e2ca354f65c24068afac72758669e061:a7eb4ef43e2a48229ce87add8b8e98e0' 2>/dev/null)

	[ "$(cat "$RPC_OUTPUT")" == "" ] && {
		#echo "error-code 1"
		#echo "error-message \"Network Error\""
		echo "not-ok __BEGIN error-code 1 error-message \"Network Error\" not-ok __END"
		return 0
	}

	isFailure=$(cat $RPC_OUTPUT | grep message)

	if [ -n "$isFailure" ]
	then
		#Failure case 403
		local __tmp=$(cat $RPC_OUTPUT)

		json_init
		json_load "${__tmp:-{}}"

		#json_get_keys __keys
		#echo "keys: $__keys"

		json_get_var message message

		#echo "error-code 403"
		#echo "error-message \"$message\""
		echo "not-ok __BEGIN error-code 403 error-message \"$message\" not-ok __END"
	else
		local __tmp=$(cat $RPC_OUTPUT)

		__tmp="{\"__orgs\":$__tmp}"

		#echo "Final Json for Parsing: $__tmp"

		json_init
		json_load "${__tmp:-{}}"
		json_select "__orgs"

		local Index="1"

		echo "success-code 200"

		while json_get_type type $Index && [ "$type" = object ]; do
			json_select "$((Index++))"
			json_get_keys __keys
			#echo $__keys

			json_get_var organizationId organizationId
			json_get_var name name

			echo "organizations __BEGIN organization-id \"$organizationId\" name \"$name\" organizations __END"
			json_select ".."
		done

		json_select ".."
	fi
}


$CURL $URL -X GET --user $KEY -k 2>/dev/null > $RPC_OUTPUT
[ "$?" != "0" ] && {
  echo "not-ok __BEGIN error-code 1 error-message \"Network Error\" not-ok __END"
  exit 0
}

#calling get_organizations
get_organizations

exit 0
