#!/bin/sh

# This rpc deregisters a device from list of devices belongs to an organization identified by organizationId.

##Rest API: DELETE /v1/organizations/{organizationId}/networkdevices/{originId}
#The API results with curl tool as below:
##Command:
#curl -i -X DELETE https://management.api.umbrella.com/v1/organizations/2251171/networkdevices/124401076 --user 'e2ca354f65c24068afac72758669e061:a7eb4ef43e2a48229ce87add8b8e98e0'  --header "Content-Type: application/json"
##Output:
#HTTP/1.1 200 OK  & --------- rest of the HTTP header----

. /usr/share/libubox/jshn.sh

DEVICE_ID_FILE=/mnt/configcert/umbrella/device-id
RPC_OUTPUT=/tmp/odns_device_output
RPC_DEBUG=/tmp/odns_debug_output
CURL="/usr/bin/curl"

#logger -t rpc-testing "Called $0 with args: $@"

key=`echo $@ | awk '{for (I=1;I<=NF;I++) if ($I == "key") {print $(I+1)};}'`
secret=`echo $@ | awk '{for (I=1;I<=NF;I++) if ($I == "secret") {print $(I+1)};}'`
ca=`echo $@ | awk '{for (I=1;I<=NF;I++) if ($I == "ca") {print $(I+1)};}'`

org_id=`echo $@ | awk '{for (I=1;I<=NF;I++) if ($I == "organization-id") {print $(I+1)};}'`
origin_id=`echo $@ | awk '{for (I=1;I<=NF;I++) if ($I == "origin-id") {print $(I+1)};}'`

[ -z "$key" ] && {
	key=$(uci get umbrella.netdev_config_0.key)
}

[ -z "$secret" ] && {
	secret=$(uci get umbrella.netdev_config_0.secret)
}

#Error Codes
ODNS_SUCCESS=0
ODNS_FAILURE=1
errcode=$ODNS_SUCCESS

#clear the old contents of the debug file
echo -n "" > $RPC_DEBUG
echo "$0: key=$key secret=$secret ca=$ca orgid=$org_id originid=$origin_id" > $RPC_DEBUG
echo "no. of argument:"$# >> $RPC_DEBUG

#validating the input arguments
if [ -z $org_id ];then
    echo "not-ok __BEGIN error-code 1 error-message \"organization-id is missing\" not-ok __END"
    exit 0
elif [ -z $origin_id ];then
    echo "not-ok __BEGIN error-code 1 error-message \"origin-id is missing\" not-ok __END"
    exit 0
elif [ -z $key ] || [ -z $secret ];then
    echo "not-ok __BEGIN error-code 1 error-message \"key or secret is missing\" not-ok __END"
    exit 0
fi



#Athentication Credentials
KEY="$key:$secret"
URL="https://management.api.umbrella.com/v1/organizations/$org_id"
CONTENT_TYPE="Content-Type: application/json"

delete_a_device ()
{
	isFailure=$(cat $RPC_OUTPUT | grep error)
	isAuthFailure=$(cat $RPC_OUTPUT | grep message)

	if [ -n "$isFailure" ]
	then
		#Failure case
		local __tmp=$(cat $RPC_OUTPUT)

		json_init
		json_load "${__tmp:-{}}"

		json_get_var statusCode statusCode
		json_get_var error error
		json_get_var txId txId

		echo "not-ok __BEGIN error-code $statusCode error-message \"$error\" tx-id \"$txId\" not-ok __END"
	elif [ -n "$isAuthFailure" ]
	then
		#Failure case: {"message":"Invalid authentication credentials"}

		local __tmp=$(cat $RPC_OUTPUT)
		json_init
		json_load "${__tmp:-{}}"

		json_get_var message message
		echo "not-ok __BEGIN error-code 403 error-message \"$message\" not-ok __END"
	else
		#Success case. We don't get any Json data for this case.
		rm $DEVICE_ID_FILE
		echo "success-code 200"
	fi
}

#Deregister a device identified by $origin_id from an organization identified by $org_id.
$CURL $URL/networkdevices/$origin_id -X DELETE --user $KEY --header "$CONTENT_TYPE" -k 2>/dev/null  > $RPC_OUTPUT
[ "$?" != "0" ] && {
   echo "not-ok __BEGIN error-code 1 error-message \"Network Error\" not-ok __END"
   exit 0
}

delete_a_device


exit 0
