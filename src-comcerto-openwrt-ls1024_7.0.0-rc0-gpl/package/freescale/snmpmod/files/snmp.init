#!/bin/sh /etc/rc.common
START=99
STOP=98
STATFILE=/mnt/configcert/config/snmpbootstat
. /lib/functions/network.sh
IPTABLES="/usr/sbin/iptables -w"


start() {
  config_load snmpconf
  config_foreach snmpconf snmpconf
  /usr/bin/snmpglue -n 1 &
  #updatesysdesc
}

stop() {
  echo "warmstart" > $STATFILE
}
                                                        
reload() {
  $IPTABLES --table filter --flush snmp
  config_load snmpconf
  config_foreach snmpconf snmpconf
}

updatesysdesc() {
    PID=`uci get systeminfo.sysinfo.pid`
    board=`uci get systeminfo.sysinfo.pid | cut -d'-' -f1`

    # OIDs
    RV340_OID=1.3.6.1.4.1.9.6.1.23.3.13.0.4
    RV345_OID=1.3.6.1.4.1.9.6.1.23.3.18.0.0
    RV345P_OID=1.3.6.1.4.1.9.6.1.23.3.18.0.10
    RV340W_OID=1.3.6.1.4.1.9.6.1.23.3.13.4.0

    RV160_OID=1.3.6.1.4.1.9.6.1.23.1.31.0.0
    RV160W_OID=1.3.6.1.4.1.9.6.1.23.1.31.4.0
    RV260_OID=1.3.6.1.4.1.9.6.1.23.2.32.0.0
    RV260W_OID=1.3.6.1.4.1.9.6.1.23.2.32.4.0
    RV260P_OID=1.3.6.1.4.1.9.6.1.23.2.32.0.10

    VERS=`cat /etc/firmware_version`
    COMPTIME=`uname -a | sed -n '/SMP/{s/.*SMP//;s/armv7l.*//;p}'`
    SYSDESC=`echo Linux, Cisco Small Business $PID, Version $VERS $COMPTIME`
    SYSOID=$RV340_OID

    case $board in
            RV340)
                SYSOID=$RV340_OID
            ;;
            RV345)
                SYSOID=$RV345_OID
            ;;
            RV345P)
                SYSOID=$RV345P_OID
            ;;
            RV340W)
                SYSOID=$RV340W_OID
            ;;
            RV160)
                SYSOID=$RV160_OID
            ;;
            RV160W)
                SYSOID=$RV160W_OID
            ;;
            RV260)
                SYSOID=$RV260_OID
            ;;
            RV260W)
                SYSOID=$RV260W_OID
            ;;
            RV260P)
                SYSOID=$RV260P_OID
            ;;
    *)
    ;;
    esac

    confd_cmd -c "mset /confdConfig/snmpAgent/system/sysDescr \"$SYSDESC\""
    confd_cmd -c "mset /confdConfig/snmpAgent/system/sysObjectID \"$SYSOID\""
}

snmpconf() {
    local cfg=$1

    config_get wanaccess "$cfg" wanaccess
    config_get vpnaccess "$cfg" vpnaccess
    
    #echo "wanaccess = $wanaccess"
    #echo "vpnaccess = $vpnaccess"
    
    if [ "$wanaccess" = "true" ]
    then
        # Update WAN access rule
        #echo " update rules..."
        network_active_wan_interfaces allWANiface
        for waniface in $allWANiface
        do
            #echo "allWANiface = $allWANiface"
            local realDev
	     
	    network_get_waniface realDev $waniface
	    #echo "waniface = $waniface"
	    local wanipaddr=""
            network_get_wanip wanipaddr $waniface
            $IPTABLES --table filter --append snmp --in-interface $realDev --dest $wanipaddr --jump ACCEPT
         done
     fi

     if [ "$vpnaccess" = "true" ];
     then
        # Update VPN access rule
        #echo "vpn access"
        $IPTABLES --table filter --append snmp --protocol udp --dport 161 --match policy --dir in --pol ipsec --jump ACCEPT
        $IPTABLES --table filter --append snmp --protocol udp --dport 161 --in-interface tun0 --jump ACCEPT
     else
        #echo " NO vpn access"
        $IPTABLES --table filter --append snmp --protocol udp --dport 161 --match policy --dir in --pol ipsec --jump REJECT
        $IPTABLES --table filter --append snmp --protocol udp --dport 161 --in-interface tun0 --jump REJECT
     fi

}

