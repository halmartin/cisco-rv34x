#!/bin/sh
# This script is executed as part of the hotplug event with
# HOTPLUG_TYPE=iface, triggered by various scripts when an interface
# is configured (ACTION=ifup) or deconfigured (ACTION=ifdown).  The
# interface is available as INTERFACE, the real devicie as DEVICE.

. /lib/functions.sh
. /lib/functions/network.sh

ru_check=`uci get systeminfo.sysinfo.region 2> /dev/null`
if [ "$ru_check" = "RU" ]; then
	exit 0
fi

[ "$DEVICE" == "lo" ] && exit 0

#logger -t VPN-cfg Device: $DEVICE   $INTERFACE/ Action: $ACTION

#NOTE:  DEVICE consists of the physical interface name in it.
#	INTERFACE consists of the logical name that we refer into the network configuration file.

#This File is created just add a default route if the gre mode is full-tunnel and also for cmm notify about security.

case "$ACTION" in
        ifup)
        	local isGRE=`echo $INTERFACE | grep gre`
        	[ -n "$isGRE" ] && {
        		local ifconfig_output=`ifconfig | grep gre`

        		[ -n "$ifconfig_output" ] && {
				#Which implies that interface is UP in ifconfig also.
				ifconfig $DEVICE multicast

				local gre_interface_name=`echo $DEVICE | cut -d '-' -f 2-` #Eg: gre-gre5. get only "gre5", which is gre_interface_name in uci.
				local gre_tunnel_locals=`uci show strongswan | grep "local_gre_iface=$gre_interface_name" | awk -F '.' '{print $2}'`
				for tunnel_name in $gre_tunnel_locals
				do
					#This is a situation where the GRE interface is just up.
					#	There may be a case that the tunnel might be up beforehand. So set cmm's secure flag if it is so.
					is_tunnel_up=`ipsec statusall $tunnel_name | grep -e "ESTABLISHED"`
					if [ -n "$is_tunnel_up" ]
					then
						cmm -c tunnel $DEVICE add gre ipsec 1
						break
					fi
				done
        		}
        	} 
        ;;
	ifdown)
		local isGRE=`echo $INTERFACE | grep gre`
        	[ -n "$isGRE" ] && {
			local gre_interface_name=`echo $DEVICE | cut -d '-' -f 2-` #Eg: gre-gre5. get only "gre5", which is gre_interface_name in uci.
			local gre_tunnel_locals=`uci show strongswan | grep "local_gre_iface=$gre_interface_name" | awk -F '.' '{print $2}'`
			for tunnel_name in $gre_tunnel_locals
			do
				ipsec down $tunnel_name & #just bringdown that tunnel.
			done
		}
	;;
esac
