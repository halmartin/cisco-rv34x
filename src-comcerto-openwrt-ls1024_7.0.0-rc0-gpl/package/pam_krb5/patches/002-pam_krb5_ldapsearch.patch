--- a/public.c	2015-09-09 11:25:11.056873971 +0530
+++ b/public.c	2015-09-09 11:25:40.140508340 +0530
@@ -106,6 +106,8 @@ int pam_ldap_search (pam_handle_t *pamh)
     char *token = NULL;
     char ldap_host[256] = {'\0'};
     char domain[256] = {'\0'};
+    char basedn[256] = {'\0'};
+
     PAM_CONST char *username = NULL;
     
     result = pam_get_user(pamh, &username, NULL);
@@ -135,7 +137,13 @@ int pam_ldap_search (pam_handle_t *pamh)
          }
               domain[strlen(domain) - 1] = '\0';
 
-       sprintf(ldap_dn,"%s@%s",username,domain);
+       if(fgets(basedn,sizeof(basedn),file)==NULL)
+          {
+              fclose(file);
+              return PAM_SERVICE_ERR;
+          }
+        basedn[strlen(basedn) - 1] = '\0';
+        sprintf(ldap_dn,"%s@%s",username,domain);
      fclose(file);
     if((ldap = ldap_init(ldap_host, ldap_port)) == NULL )
         return PAM_SERVICE_ERR;      
@@ -150,17 +158,7 @@ int pam_ldap_search (pam_handle_t *pamh)
          return PAM_SERVICE_ERR;
      }
     
-     token = strtok(domain, ".");
-     /* walk through other tokens */
-     while (token != NULL )
-      {
-             sprintf(tmpdn+strlen(tmpdn),"dc=%s",token);
-             token = strtok(NULL, ".");
-             if(token != NULL)
-               sprintf(tmpdn+strlen(tmpdn),",");
-      }
-      
-     sprintf(base_dn,"cn=%s,%s",username,tmpdn);
+     sprintf(base_dn,"cn=%s,%s",username,basedn);
      result = ldap_search_s (ldap, base_dn, scope,
                                filter, attrs,attrsonly, &res);
      if ( result != LDAP_SUCCESS ) {
--- a/auth.c	2015-09-09 11:25:20.540754742 +0530
+++ b/auth.c	2015-09-09 11:25:50.800374327 +0530
@@ -679,6 +679,7 @@ verify_creds(struct pam_args *args, krb5
     return retval;
 }
 
+#if 0
 int krb5_create_keytab(struct pam_args *args,const char *password)
 {
     PAM_CONST char *username = NULL;
@@ -713,6 +714,7 @@ int krb5_create_keytab(struct pam_args *
     fclose(file);
     return PAM_SUCCESS;
 }
+#endif
 /*
  * Prompt the user for a password and authenticate the password with the KDC.
  * If correct, fill in creds with the obtained TGT or ticket.  service, if
@@ -828,11 +830,11 @@ pamk5_password_auth(struct pam_args *arg
             if (status != PAM_SUCCESS)
                 goto done;
         }
-
+#if 0
         retval = krb5_create_keytab(args,pass);
         if(retval != PAM_SUCCESS)
             goto done;
-
+#endif
         /*
          * Attempt authentication.  If we succeeded, we're done.  Otherwise,
          * clear the password and then see if we should try again after
